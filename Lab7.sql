--1:
SELECT COURSE.COURSE_NO, COURSE.DESCRIPTION, NVL(COURSE_REVENUE.REVENUE,0) AS "Total Revenue per Course"
FROM STUDENT.COURSE
LEFT JOIN STUDENT.COURSE_REVENUE
ON COURSE.COURSE_NO = COURSE_REVENUE.COURSE_NO
ORDER BY COURSE_REVENUE.REVENUE NULLS FIRST;

--2:
SELECT COURSE.COURSE_NO, COURSE.DESCRIPTION, NVL(COURSE_REVENUE.REVENUE,0) AS "Total Revenue per Course"
FROM STUDENT.COURSE_REVENUE
RIGHT JOIN STUDENT.COURSE
ON COURSE.COURSE_NO = COURSE_REVENUE.COURSE_NO
ORDER BY COURSE_REVENUE.REVENUE NULLS FIRST;

--3:
SELECT COURSE.COURSE_NO, COURSE.DESCRIPTION, NVL(COURSE_REVENUE.REVENUE,0) AS "Total Revenue per Course"
FROM STUDENT.COURSE_REVENUE
RIGHT JOIN STUDENT.COURSE
ON COURSE.COURSE_NO = COURSE_REVENUE.COURSE_NO
WHERE COURSE_REVENUE.REVENUE > 0
ORDER BY COURSE_REVENUE.REVENUE DESC;

--4:
SELECT INSTRUCTOR_ID AS "Instructors Not Teaching"
FROM STUDENT.INSTRUCTOR
MINUS
SELECT INSTRUCTOR_ID
FROM STUDENT.SECTION
WHERE SECTION_NO > 0;

--5:
SELECT DESCRIPTION, COST, PREREQUISITE
FROM STUDENT.COURSE
WHERE DESCRIPTION LIKE '%s' AND COST > 1100 AND PREREQUISITE BETWEEN 25 AND 80;

--6:
SELECT COST, COUNT(COURSE_NO) AS "Total Courses"
FROM STUDENT.COURSE
GROUP BY COST
ORDER BY "Total Courses" DESC;

--7:
SELECT COURSE_NO, DESCRIPTION
FROM STUDENT.COURSE
WHERE LENGTH(DESCRIPTION) BETWEEN 10 AND 15
ORDER BY COURSE_NO ASC;

--8:
SELECT TO_CHAR(SYSDATE, 'MM/DD/YYYY') AS "Formatted Today's Date"
FROM DUAL;

--9:
SELECT TO_CHAR(SYSDATE, 'MM/DD/YYYY HH:MM:SS') AS "Formatted Today's Date"
FROM DUAL;

--10:
SELECT TO_CHAR(SYSDATE, 'DY MON DD, YYYY') AS "Formatted Today's Date"
FROM DUAL;

--11:
SELECT MAX(COST) AS "Highest Cost"
FROM STUDENT.COURSE;

--12:
SELECT TO_CHAR(MAX(COST), '$9,999') AS "Highest Cost"
FROM STUDENT.COURSE; 

--13:
SELECT MIN(SALARY) AS "Minimum", MAX(SALARY) AS "Maximum", AVG(SALARY) AS "Average", MEDIAN(SALARY) AS "Median"
FROM STUDENT.EMPLOYEE;

--14:
SELECT MIN(SALARY) + MAX(SALARY) AS "Min plus Max"
FROM STUDENT.EMPLOYEE;

--15:
SELECT EMPLOYEE_ID, NAME, TITLE
FROM STUDENT.EMPLOYEE
WHERE TITLE IN ('Manager', 'Analyst')
ORDER BY EMPLOYEE_ID DESC;

--16:
SELECT LAST_NAME AS "Sounds like Archer"
FROM STUDENT.STUDENT
WHERE SOUNDEX(LAST_NAME) = SOUNDEX('Archer');

--17:
SELECT EMPLOYER, COUNT(STUDENT_ID) AS "Number of Students Employed by"
FROM STUDENT.STUDENT
GROUP BY EMPLOYER
ORDER BY "Number of Students Employed by" DESC;

--18:
SELECT EMPLOYER, COUNT(STUDENT_ID) AS "Number of Students Employed by"
FROM STUDENT.STUDENT
GROUP BY EMPLOYER
HAVING COUNT(STUDENT_ID) > 7
ORDER BY "Number of Students Employed by" DESC;

--19:
SELECT STUDENT_ID, LAST_NAME || FIRST_NAME AS "Last,First"
FROM STUDENT.STUDENT
WHERE ROWNUM <= 10
ORDER BY STUDENT_ID;

--20:
SELECT COALESCE(MIDTERM_GRADE, MIDTERM_GRADE) AS "MIDTERM_GRADE",COALESCE(FINALEXAM_GRADE,FINALEXAM_GRADE) AS "FINALEXAM_GRADE",COALESCE(QUIZ_GRADE,QUIZ_GRADE) AS "QUIZ_GRADE" ,COALESCE(MIDTERM_GRADE, FINALEXAM_GRADE,QUIZ_GRADE, 0) AS "Default of 0"
FROM STUDENT.GRADE_SUMMARY;